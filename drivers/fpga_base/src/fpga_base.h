/*
//----------------------------------------------------------------------------
//                       Paul Scherrer Institute (PSI)
//----------------------------------------------------------------------------
// Unit    : fpga_base.h
// Author  : Goran Marinkovic, Section Diagnostic
// Version : $Revision: 1.1 $
//----------------------------------------------------------------------------
// CopyrightÂ© PSI, Section Diagnostic
//----------------------------------------------------------------------------
// Comment : This file is used for the system info.
//----------------------------------------------------------------------------
*/
#ifndef fpga_base_H
#define fpga_base_H

/* Include files */
#include <stdint.h>
#include <xil_io.h>
#include <stdio.h>

//-------------------------------------------------------------------------
// Version of the firmware assigned by user.
//-------------------------------------------------------------------------
#define C_VERSION_OFS             0x00000000

//-------------------------------------------------------------------------
// Firmware compilation date and time. This values are set during
// elaboration by a tcl script run by Vivado. Hence it updates every time
// the code is compiled.
//-------------------------------------------------------------------------
#define C_FW_DATE_YEAR_OFS        0x00000004
#define C_FW_DATE_MONTH_OFS       0x00000008
#define C_FW_DATE_DAY_OFS         0x0000000C
#define C_FW_DATE_HOUR_OFS        0x00000010
#define C_FW_DATE_MINUTE_OFS      0x00000014

/* Data declaration */
/* Output of __DATE__ : */
/* Jan  1 2015 */
/* Feb  1 2015 */
/* Mar  1 2015 */
/* Apr  1 2015 */
/* May  1 2015 */
/* Jun  1 2015 */
/* Jul  1 2015 */
/* Aug  1 2015 */
/* Sep  1 2015 */
/* Oct  1 2015 */
/* Nov  1 2015 */
/* Dec  1 2015 */
/* 0123456789A */
#define DATE_YEAR (((__DATE__[ 7] - '0') * 1000) + ((__DATE__[ 8] - '0') * 100) + ((__DATE__[ 9] - '0') * 10) + (__DATE__[10] - '0'))
#define DATE_MONTH (__DATE__[ 0] == 'J' && __DATE__[ 1] == 'a' && __DATE__[ 2] == 'n' ?  1 :\
                    __DATE__[ 0] == 'F' && __DATE__[ 1] == 'e' && __DATE__[ 2] == 'b' ?  2 :\
                    __DATE__[ 0] == 'M' && __DATE__[ 1] == 'a' && __DATE__[ 2] == 'r' ?  3 :\
                    __DATE__[ 0] == 'A' && __DATE__[ 1] == 'p' && __DATE__[ 2] == 'r' ?  4 :\
                    __DATE__[ 0] == 'M' && __DATE__[ 1] == 'a' && __DATE__[ 2] == 'y' ?  5 :\
                    __DATE__[ 0] == 'J' && __DATE__[ 1] == 'u' && __DATE__[ 2] == 'n' ?  6 :\
                    __DATE__[ 0] == 'J' && __DATE__[ 1] == 'u' && __DATE__[ 2] == 'l' ?  7 :\
                    __DATE__[ 0] == 'A' && __DATE__[ 1] == 'u' && __DATE__[ 2] == 'g' ?  8 :\
                    __DATE__[ 0] == 'S' && __DATE__[ 1] == 'e' && __DATE__[ 2] == 'p' ?  9 :\
                    __DATE__[ 0] == 'O' && __DATE__[ 1] == 'c' && __DATE__[ 2] == 't' ? 10 :\
                    __DATE__[ 0] == 'N' && __DATE__[ 1] == 'o' && __DATE__[ 2] == 'v' ? 11 :\
                    __DATE__[ 0] == 'D' && __DATE__[ 1] == 'e' && __DATE__[ 2] == 'c' ? 12 :\
                    0)
#define DATE_DAY   (__DATE__[ 4] == ' ' ? (__DATE__[ 5] - '0') : (((__DATE__[ 4] - '0') * 10) + (__DATE__[ 5] - '0')))

/* Output of __TIME__ : */
/* 14:30:30 */
/* 01234567 */
#define TIME_HOUR   (__TIME__[0] == ' ' ? (__TIME__[1] - '0') : (((__TIME__[0] - '0') * 10) + (__TIME__[1] - '0')))
#define TIME_MINUTE (__TIME__[3] == ' ' ? (__TIME__[4] - '0') : (((__TIME__[3] - '0') * 10) + (__TIME__[4] - '0')))

//-------------------------------------------------------------------------
// Software compilation date and time. This values are set during start of
// the processor by copying the string generated by C preprocessor macros
// __DATE__ and __TIME__
//-------------------------------------------------------------------------
#define C_SW_DATE_YEAR_OFS        0x00000018
#define C_SW_DATE_MONTH_OFS       0x0000001C
#define C_SW_DATE_DAY_OFS         0x00000020
#define C_SW_DATE_HOUR_OFS        0x00000024
#define C_SW_DATE_MINUTE_OFS      0x00000028

//-------------------------------------------------------------------------
//  Project and facility strings
//-------------------------------------------------------------------------
#define C_PROJECT_OFS             0x00000040
#define C_FACILITY_OFS            0x00000050

//---------------------------------------------------------------------------
// LEDs
//---------------------------------------------------------------------------
#define C_LED_OFS                 0x00000060
#define C_DIP_SW_OFS              0x00000064

/* Function declaration */
void fpga_base_set_led(uint32_t base_addr, uint8_t val);
uint8_t fpga_base_read_dip(uint32_t base_addr);
void fpga_base_version(uint32_t base_addr);
void fpga_base_print(uint32_t base_addr);

#endif /* fpga_base_H */

/* EOF */
